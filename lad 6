#include <stdio.h>
#include <stdlib.h>
#define MAX 5
int queue[MAX];
int front = -1, rear = -1;
void display()
{
int i;
if (front == -1)
{
printf("Queue is empty\n");
return;
}
printf("Queue elements are: ");
i = front;
while (1)
{
printf("%d ", queue[i]);
if (i == rear)
break;
i = (i + 1) % MAX;
}
printf("\n");
}
{
void enqueue(int item)
if ((rear + 1) % MAX == front)
{
printf("Queue is full\n");
return;
}
if (front == -1)
{ // Inserting the first element
front = rear = 0;
} else {
rear = (rear + 1) % MAX;
}
queue[rear] = item;
display();
}
int dequeue()
{
int item;
if (front == -1)
{
printf("Queue is empty\n");
return -1;
}
item = queue[front];
if (front == rear)
{
// Queue has only one element
front = rear = -1;
} else {
front = (front + 1) % MAX;
}
display();
return item;
}
int main()
{
int choice, item;
while (1)
{
printf("\n--- Circular Queue Menu ---\n");
printf("1. Enqueue\n");
printf("2. Dequeue\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice)
{
case 1:
printf("Enter element to insert: ");
scanf("%d", &item);
enqueue(item);
break;
case 2:
item = dequeue();
if (item != -1)
printf("Deleted item: %d\n", item);
break;
case 3: display(); break;
case 4: exit(0);
default: printf("Invalid choice\n");
}
}
return 0;
}