#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define MAX 100
int pre(char op)
{
if (op == '^') return 3;
if (op == '*' || op == '/') return 2;
if (op == '+' || op == '-') return 1;
return 0;
int isRightAssociative(char op)
return (op == '^');
}
{
}
{
int main()
char infix[MAX], stack[MAX], ch;
int i, j, top = -1;
top++;
stack[top] = '(';
printf("Infix to Postfix");
printf("\nEnter infix expression: ");
gets(infix);
strcat(infix, ")");
printf("Postfix Expression:\n");
for (i = 0; infix[i] != '\0'; i++)
{
ch = infix[i];
if (isalnum(ch))
{
printf("%c", ch);
}
else if (ch == '(')
{
top++;
stack[top] = ch;
}
else if (ch == ')')
{
while (stack[top] != '(')
{
printf("%c", stack[top]);
top--;
}
top--;
}
else
{
while (stack[top] != '(' &&(pre(stack[top]) > pre(ch) ||(pre(stack[top]) == pre(ch) &&
!isRightAssociative(ch)))) {
printf("%c", stack[top]);
top--;
}
top++;
stack[top] = ch;
}
}
printf("\n");
return 0;
}